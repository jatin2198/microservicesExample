server:
  port: 8081
 

 
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/UserService
    username: root
    password: jatin123
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
      dialect: org.hibernate.dialect.MySQL5Dialect

  application:
    name: UserService
  config:
    import: optional:configserver:http://localhost:8085
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-75985842.okta.com/oauth2/default
      client:
        registration:
          my-internal-clent:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oaa5f5x0aXWpYHfv5d7
            client-secret: Y_czkQEmIeolnf0pbLDtDByMHl-OEUqinK9lVC-D
        provider:
          okta:
            issuer-uri: https://dev-75985842.okta.com/oauth2/default     
              
          
         
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always      

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        
  retry:
    instances:
      ratingHotelService:
        wait-duration: 5s
        max-attempts: 3
      
  ratelimiter:
    instances:
      ratingHotelLimiter:
        limit-for-period: 2
        limit-refresh-period: 4s
        timeout-duration: 2s
        



        
okta:
  oauth2:
    issuer: https://dev-75985842.okta.com/oauth2/default      
    audience: api://default      
           
 
    


    
       
    
  
  
    
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true 
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8080/eureka
#       
     
     
    
        
      

      
      
     
      
      
   
    
    
  
      